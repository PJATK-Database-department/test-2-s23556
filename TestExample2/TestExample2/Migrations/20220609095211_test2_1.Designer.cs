// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestExample2.Models;

namespace TestExample2.Migrations
{
    [DbContext(typeof(OrderDBContext))]
    [Migration("20220609095211_test2_1")]
    partial class test2_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestExample2.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            FirstName = "Mateusz",
                            LastName = "Kowalski"
                        });
                });

            modelBuilder.Entity("TestExample2.Models.ClientOrder", b =>
                {
                    b.Property<int>("IdClientOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClientOrder");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("ClientOrder");

                    b.HasData(
                        new
                        {
                            IdClientOrder = 1,
                            Comments = "nice",
                            CompletionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdClient = 1,
                            IdEmployee = 1,
                            OrderDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TestExample2.Models.Confectionery", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PricePerOne")
                        .HasColumnType("real");

                    b.HasKey("IdConfectionery");

                    b.ToTable("Confectionery");

                    b.HasData(
                        new
                        {
                            IdConfectionery = 1,
                            Name = "Shoe",
                            PricePerOne = 2f
                        });
                });

            modelBuilder.Entity("TestExample2.Models.Confectionery_ClientOrder", b =>
                {
                    b.Property<int>("IdClientOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdConfectionary")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdClientOrder", "IdConfectionary");

                    b.HasIndex("IdConfectionary");

                    b.ToTable("Confectionery_ClientOrder");

                    b.HasData(
                        new
                        {
                            IdClientOrder = 1,
                            IdConfectionary = 1,
                            Amount = 2
                        });
                });

            modelBuilder.Entity("TestExample2.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.HasKey("IdEmployee");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            IdEmployee = 1,
                            FirstName = "Przemek",
                            LastName = "Kowal"
                        });
                });

            modelBuilder.Entity("TestExample2.Models.ClientOrder", b =>
                {
                    b.HasOne("TestExample2.Models.Client", "client")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TestExample2.Models.Employee", "employee")
                        .WithMany("Orders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TestExample2.Models.Confectionery_ClientOrder", b =>
                {
                    b.HasOne("TestExample2.Models.ClientOrder", "clientOrder")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdClientOrder")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TestExample2.Models.Confectionery", "confectionery")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdConfectionary")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("clientOrder");

                    b.Navigation("confectionery");
                });

            modelBuilder.Entity("TestExample2.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TestExample2.Models.ClientOrder", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("TestExample2.Models.Confectionery", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("TestExample2.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
